name: ICTest Backend CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  eslint:
    runs-on: ubuntu-latest
    container: node:14-alpine
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Check the ESLint
        run: npm run lint
  audit:
    runs-on: ubuntu-latest
    container: node:14-alpine
    steps:
      - uses: actions/checkout@v4
      - name: Audit The Dependencies
        run: npm audit
  type_check:
    runs-on: ubuntu-latest
    container: node:14-alpine
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Check Type
        run: npx tsc -noEmit
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run test
  e2e-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: bitnami/postgresql
        ports:
          - 5432:5432
        env:
          POSTGRESQL_USERNAME: docker
          POSTGRESQL_PASSWORD: docker
          POSTGRESQL_DATABASE: ictest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run test:e2e
        env:
          JWT_SECRET: testing
          DATABASE_URL: "postgresql://docker:docker@localhost:5432/ictest?schema=public"